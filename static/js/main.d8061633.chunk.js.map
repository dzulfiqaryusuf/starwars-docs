{"version":3,"sources":["Character.js","SearchBar.js","CharacterList.js","CharacterDetail.js","App.js","index.js"],"names":["Character","chunk","name","id","image","history","useHistory","handleOnClick","useCallback","push","className","onClick","alt","src","style","height","width","display","margin","paddingTop","textAlign","SearchBar","handleChange","type","placeholder","onChange","CharacterList","data","useState","searchField","setSearchField","Characters","filter","character","toLowerCase","includes","map","e","target","value","CharacterDetail","useParams","setCharacter","useEffect","getData","a","fetch","dataBuffer","json","console","log","float","hairColor","skinColor","died","diedLocation","homeworld","masters","affiliation","index","apprentices","overflow","mass","born","bornLocation","species","affiliations","App","setData","axios","result","fetchData","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8061633.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport \"./Character.css\";\nimport { useHistory } from \"react-router-dom\";\nconst Character = ({ chunk }) => {\n  const { name, id, image } = chunk;\n  const history = useHistory();\n  const handleOnClick = useCallback(() => history.push(`/${id}`), [history]);\n  return (\n    <div className=\"character-container\" onClick={handleOnClick}>\n      <img\n        className=\"mb-10\"\n        alt={name}\n        src={image}\n        key={id}\n        style={{\n          height: \"250px\",\n          width: \"200px\",\n          display: \"block\",\n          margin: \"auto\",\n          paddingTop: \"15px\",\n        }}\n      />\n      <h4\n        className=\"text-2xl pt-5 pb-3 font-semibold\"\n        style={{ textAlign: \"center\" }}\n      >\n        {name}\n      </h4>\n    </div>\n  );\n};\n\nexport default Character;\n","import React from \"react\";\n\nconst SearchBar = ({ handleChange }) => {\n  return (\n    <div className=\"text-center mb-10\">\n      <input\n        type=\"search\"\n        placeholder=\"search characters\"\n        className=\"text-center\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport Character from \"./Character\";\nimport \"./CharacterList.css\";\nimport SearchBar from \"./SearchBar\";\nconst CharacterList = ({ data }) => {\n  const [searchField, setSearchField] = useState(\"\");\n  const filteredCharacters = data.filter((character) =>\n    character.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n  const Characters = filteredCharacters.map((chunk) => {\n    return <Character chunk={chunk} key={chunk.id} />;\n  });\n  return (\n    <div>\n      <h1 className=\"text-6xl font-bold text-center m-20\">Star Wars Docs</h1>\n\n      <SearchBar handleChange={(e) => setSearchField(e.target.value)} />\n      <div className=\"character\">{Characters}</div>\n    </div>\n  );\n};\n\nexport default CharacterList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst CharacterDetail = () => {\n  const { id } = useParams();\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    const dataBuffer = await fetch(\n      `https://rawcdn.githack.com/akabab/starwars-api/0.2.1/api/id/${id}.json`\n    );\n    const data = await dataBuffer.json();\n    console.log(data);\n    setCharacter(data);\n  };\n  console.log(character);\n  return (\n    <div className=\"container mx-auto max-w-xl pt-8 min-h-screen\">\n      <h1 className=\"text-4xl mb-2  pb-10 font-semibold text-center capitalize\">\n        {character.name}\n      </h1>\n      <img\n        className=\"mx-auto h-96 pb-5\"\n        src={character.image}\n        alt={character.name}\n      />\n      <div style={{ width: \"18rem\", float: \"left\" }}>\n        {\" \"}\n        <p>\n          <span className=\"font-bold mr-2\">Hair Color: </span>\n          {character.hairColor}\n        </p>\n        <p>\n          <span className=\"font-bold mr-2\">Skin color: </span>\n          {character.skinColor}\n        </p>\n        <p>\n          <span className=\"font-bold mr-2\">Died: </span>\n\n          {character.died\n            ? `${character.died} at ${character.diedLocation}`\n            : \"not ded yet\"}\n        </p>\n        <p>\n          <span className=\"font-bold mr-2\">Homeworld: </span>\n          {character.homeworld}\n        </p>\n        <h2 className=\"text-2xl mt-6 mb-2\">Masters</h2>\n        {character.masters ? (\n          character.masters.map((affiliation, index) => (\n            <p key={index}>{affiliation}</p>\n          ))\n        ) : (\n          <p>this character doesn't have a master</p>\n        )}\n        <h2 className=\"text-2xl mt-6 mb-2\">Apprentices</h2>\n        {character.apprentices ? (\n          character.apprentices.map((affiliation, index) => (\n            <p key={index}>{affiliation}</p>\n          ))\n        ) : (\n          <p>this character doesn't have an apprentice</p>\n        )}\n      </div>\n      <div style={{ overflow: \"hidden\", textAlign: \"right\" }}>\n        <p>\n          <span className=\"font-bold mr-2\">Weight: </span>\n          {character.mass}\n        </p>\n        <p>\n          <span className=\"font-bold mr-2\">Height: </span>\n          {character.height}\n        </p>\n        <p>\n          <span className=\"font-bold mr-2\">Born: </span>\n\n          {`${character.born} at ${character.bornLocation}`}\n        </p>\n        <p>\n          <span className=\"font-bold mr-2\">Species: </span>\n          {character.species}\n        </p>\n        <h2 className=\"text-2xl mt-6 mb-2\">Affiliations</h2>\n        {character.affiliations ? (\n          character.affiliations.map((affiliation, index) => (\n            <p key={index}>{affiliation}</p>\n          ))\n        ) : (\n          <p>...loading</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterDetail;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CharacterList from \"./CharacterList\";\nimport { Switch, Route, Link, useParams } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        \"https://rawcdn.githack.com/akabab/starwars-api/0.2.1/api/all.json\"\n      );\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" render={() => <CharacterList data={data} />} />\n        <Route path=\"/:id\" component={CharacterDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}